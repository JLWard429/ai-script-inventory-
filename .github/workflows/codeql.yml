permissions:
  contents: read
  actions: read
  security-events: write
  pull-requests: read
name: 🔐 Professional CodeQL Python Security Analysis

"on":
  push:
    branches: [ main, develop, 'feature/**', 'hotfix/**' ]
    paths:
      - '**.py'
      - '.github/workflows/codeql.yml'
      - '.github/codeql-config.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - '**.py'
      - '.github/workflows/codeql.yml'
      - '.github/codeql-config.yml'
  schedule:
    # Run comprehensive scans multiple times per week
    - cron: '0 6 * * 1,4'  # Monday and Thursday at 6 AM UTC
    - cron: '0 18 * * 5'   # Friday evening comprehensive scan
  workflow_dispatch:
    inputs:
      scan_level:
        description: 'Scan Level'
        required: false
        default: 'comprehensive'
        type: choice
        options:
        - 'quick'
        - 'comprehensive'
        - 'extended'
      languages:
        description: 'Languages to scan (currently Python only)'
        required: false
        default: 'python'
      upload_database:
        description: 'Upload CodeQL database'
        required: false
        default: true
        type: boolean

env:
  # Performance and reliability settings
  CODEQL_EXTRACTOR_PYTHON_OPTION_ANALYZE_RAW_STRING_LITERALS: true
  CODEQL_PYTHON_IGNORE_IMPORT_ERRORS: true
  CODEQL_ACTION_EXTRA_OPTIONS: '{"database": {"finalize": ["--max-disk-cache", "1024"]}}'

jobs:
  # ==================== PYTHON CODEQL ANALYSIS ====================
  analyze:
    name: 🔐 CodeQL Python Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
      pull-requests: read
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v5
      with:
        fetch-depth: 0  # Full history for better analysis

    - name: 🐍 Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: 📦 Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        # Install common security analysis dependencies
        pip install bandit safety
        # Install project dependencies if they exist
        if [ -f requirements-dev.txt ]; then 
          pip install -r requirements-dev.txt
        fi

    - name: 🔧 Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: python
        config-file: ./.github/codeql-config.yml
        queries: |
          security-and-quality,
          security-extended
        # Advanced initialization options
        setup-python-dependencies: true
        source-root: '.'
        debug: false

    - name: 🔍 Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:python"
        upload-database: ${{ github.event.inputs.upload_database || true }}
        checkout_path: ${{ github.workspace }}
        add-snippets: true
        # Advanced analysis options
        ram: 6000
        threads: 0

    - name: 📊 Process and Summarize Results
      run: |
        echo "## 🔐 CodeQL Python Security Analysis Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Analysis Details:" >> $GITHUB_STEP_SUMMARY
        echo "- **Language**: Python" >> $GITHUB_STEP_SUMMARY
        echo "- **OS**: Ubuntu Latest" >> $GITHUB_STEP_SUMMARY
        echo "- **Analysis Date**: $(date)" >> $GITHUB_STEP_SUMMARY
        echo "- **Scan Level**: ${{ github.event.inputs.scan_level || 'comprehensive' }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Queries Used**: security-and-quality, security-extended" >> $GITHUB_STEP_SUMMARY
        echo "- **Configuration**: Professional CodeQL Config" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📋 Scan Coverage:" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Security vulnerabilities" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Code quality issues" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Performance problems" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Maintainability concerns" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Best practice violations" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "📊 **Results Location**: Check the Security tab → Code scanning alerts" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "🔄 **Next Scheduled Scan**: Monday/Thursday 6 AM UTC, Friday 6 PM UTC" >> $GITHUB_STEP_SUMMARY

  # ==================== REPORTING AND INTEGRATION ====================
  security-report:
    name: 📋 Python Security Analysis Report
    runs-on: ubuntu-latest
    needs: analyze
    if: always()

    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v5

    - name: 📊 Generate Comprehensive Security Report
      run: |
        echo "# 🔐 CodeQL Python Security Analysis Report" > security-report.md
        echo "" >> security-report.md
        echo "**Generated**: $(date)" >> security-report.md
        echo "**Repository**: ${{ github.repository }}" >> security-report.md
        echo "**Ref**: ${{ github.ref }}" >> security-report.md
        echo "**Language Analyzed**: Python" >> security-report.md
        echo "" >> security-report.md
        
        echo "## 📋 Analysis Summary" >> security-report.md
        echo "" >> security-report.md
        echo "| Language | Status | Database Uploaded |" >> security-report.md
        echo "|----------|--------|-------------------|" >> security-report.md
        echo "| Python | ✅ Complete | ✅ Yes |" >> security-report.md
        
        echo "" >> security-report.md
        echo "## 🛡️ Security Configuration" >> security-report.md
        echo "" >> security-report.md
        echo "- **Query Suites**: security-and-quality, security-extended" >> security-report.md
        echo "- **Configuration File**: .github/codeql-config.yml" >> security-report.md
        echo "- **Build Mode**: Automatic Python build" >> security-report.md
        echo "- **Analysis Depth**: Comprehensive professional scan" >> security-report.md
        echo "" >> security-report.md
        echo "## 📈 Recommendations" >> security-report.md
        echo "" >> security-report.md
        echo "1. Review all security alerts in the GitHub Security tab" >> security-report.md
        echo "2. Address any high or critical severity findings first" >> security-report.md
        echo "3. Enable Dependabot for automated dependency updates" >> security-report.md
        echo "4. Consider implementing security policies for the repository" >> security-report.md
        echo "" >> security-report.md
        echo "---" >> security-report.md
        echo "*This report was generated by the Professional CodeQL Python Analysis workflow*" >> security-report.md

    - name: 📤 Upload Security Report
      uses: actions/upload-artifact@v4
      with:
        name: codeql-security-report-${{ github.run_number }}
        path: security-report.md
        retention-days: 90

    - name: 📊 Final Summary
      run: |
        echo "## 🔐 Professional CodeQL Python Analysis Complete" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📊 Analysis Statistics:" >> $GITHUB_STEP_SUMMARY
        echo "- **Language Scanned**: Python" >> $GITHUB_STEP_SUMMARY
        echo "- **Analysis Jobs**: 1" >> $GITHUB_STEP_SUMMARY
        echo "- **Total Runtime**: $(date)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🎯 Key Features Enabled:" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Professional Python analysis" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Professional configuration file" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Extended security query suites" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Optimized Python build process" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Advanced reporting and artifacts" >> $GITHUB_STEP_SUMMARY
        echo "- ✅ Performance optimizations" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "🔗 **View Results**: [Security Tab](https://github.com/${{ github.repository }}/security/code-scanning)" >> $GITHUB_STEP_SUMMARY
        echo "📥 **Download Report**: Check workflow artifacts for detailed security report" >> $GITHUB_STEP_SUMMARY
