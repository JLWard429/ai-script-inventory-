name: Auto Organize AI Scripts

on:
  push:
    # Only run when script directories or the organization script change
    paths:
      - 'python_scripts/**'
      - 'shell_scripts/**'
      - 'docs/**'
      - 'text_files/**'
      - '.github/scripts/**'
    branches: [ main, develop ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  organize-ai-scripts:
    name: Organize and Audit AI Scripts
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          if [ -f requirements-dev.txt ]; then
            pip install -r requirements-dev.txt
          elif [ -f .github/scripts/requirements.txt ]; then
            pip install -r .github/scripts/requirements.txt
          fi

      - name: Validate organization script
        run: |
          echo "Validating organization script..."
          python -m py_compile .github/scripts/organize_ai_scripts.py
          echo "✓ Script syntax is valid"

      - name: Run organization script (with output)
        id: organize
        run: |
          echo "Running organize_ai_scripts.py..."
          python .github/scripts/organize_ai_scripts.py | tee organize_output.log

      - name: Display organization script output
        if: always()
        run: |
          echo "====== organize_ai_scripts.py Output ======"
          cat organize_output.log || echo "No output log found."
          echo "==========================================="

      - name: Validate organized files
        run: |
          echo "=== Post-organization validation ==="
          echo "Checking Python scripts..."
          for script in $(find python_scripts/ -name "*.py" 2>/dev/null); do
            python -m py_compile "$script" && echo "✓ $script" || echo "✗ $script"
          done
          
          echo "Checking directory structure..."
          ls -la python_scripts/ shell_scripts/ docs/ text_files/ 2>/dev/null || true

      - name: Check for changes
        id: changes
        run: |
          git diff --quiet --exit-code || echo "changes=true" >> $GITHUB_OUTPUT

      - name: Commit & push changes (if any)
        if: steps.changes.outputs.changes == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "🤖 Automated: Organize and audit AI scripts [skip ci]

          This commit was automatically generated by the organization workflow.
          
          - Files organized by type into appropriate directories
          - README templates created where missing
          - Organization log available in workflow output"
          git push

      - name: Upload organization logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: organization-logs
          path: |
            organize_output.log
            organize_ai_scripts.log
          retention-days: 7

      - name: Workflow summary
        if: always()
        run: |
          echo "## 🤖 Organization Workflow Completed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Status" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.changes.outputs.changes }}" == "true" ]; then
            echo "✅ Changes detected and committed automatically" >> $GITHUB_STEP_SUMMARY
          else
            echo "ℹ️ No changes needed - repository already organized" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ -f organize_output.log ]; then
            echo '### Script Output:' >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
            cat organize_output.log >> $GITHUB_STEP_SUMMARY
            echo '```' >> $GITHUB_STEP_SUMMARY
          else
            echo "No script output available." >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "_Completed at $(date)_" >> $GITHUB_STEP_SUMMARY
