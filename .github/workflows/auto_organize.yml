name: 🗂️ Auto Organization

on:
  push:
    paths:
      - 'python_scripts/**'
      - 'shell_scripts/**'
      - 'docs/**'
      - 'text_files/**'
      - '.github/scripts/**'
      - '*.py'
      - '*.sh'
      - '*.md'
      - '*.txt'
    branches: [ main, develop ]
  workflow_dispatch:
  schedule:
    # Run weekly cleanup on Sundays at 3 AM UTC
    - cron: '0 3 * * 0'

env:
  PYTHON_VERSION: '3.11'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  organize:
    name: 🗂️ Organize Repository Files
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: 📊 Run organization script
        run: |
          echo "Running organization script..."
          python .github/scripts/organize_ai_scripts.py
          
      - name: 📝 Check for changes
        id: changes
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "Files were organized and changes detected"
            git status --porcelain
          else
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "No organization changes needed"
          fi

      - name: 📤 Commit and push changes
        if: steps.changes.outputs.changes == 'true'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "🗂️ Automated file organization [skip ci]"
          git push

      - name: 📋 Generate summary
        run: |
          echo "## 🗂️ Auto Organization Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Changes Made**: ${{ steps.changes.outputs.changes == 'true' && 'Yes' || 'No' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Execution Time**: $(date)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Repository Structure:" >> $GITHUB_STEP_SUMMARY
          echo "- Python scripts: $(find python_scripts -name '*.py' 2>/dev/null | wc -l) files" >> $GITHUB_STEP_SUMMARY
          echo "- Shell scripts: $(find shell_scripts -name '*.sh' 2>/dev/null | wc -l) files" >> $GITHUB_STEP_SUMMARY
          echo "- Documentation: $(find docs -name '*.md' 2>/dev/null | wc -l) files" >> $GITHUB_STEP_SUMMARY
          echo "- Text files: $(find text_files -name '*.txt' 2>/dev/null | wc -l) files" >> $GITHUB_STEP_SUMMARY