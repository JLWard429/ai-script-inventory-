import typing

Any = typing.Any
Final = typing.Final
TypedDict = typing.TypedDict
Literal = typing.Literal
Optional = typing.Optional
Union = typing.Union
Dict = typing.Dict
List = typing.List
Tuple = typing.Tuple
Callable = typing.Callable
AsyncIterator = typing.AsyncIterator
Iterator = typing.Iterator
Iterable = typing.Iterable
Awaitable = typing.Awaitable
Coroutine = getattr(typing, "Coroutine", None)
Generator = typing.Generator
Sequence = typing.Sequence
Mapping = typing.Mapping
Set = typing.Set
FrozenSet = typing.FrozenSet
DefaultDict = getattr(typing, "DefaultDict", None)
Deque = getattr(typing, "Deque", None)
Counter = getattr(typing, "Counter", None)
Type = typing.Type
ClassVar = typing.ClassVar
NoReturn = typing.NoReturn
NamedTuple = typing.NamedTuple
Protocol = getattr(typing, "Protocol", object)
runtime_checkable = getattr(typing, "runtime_checkable", lambda x: x)
Self = getattr(typing, "Self", None)
Concatenate = getattr(typing, "Concatenate", None)
ParamSpec = getattr(typing, "ParamSpec", None)
TypeVar = typing.TypeVar
TypeVarTuple = getattr(typing, "TypeVarTuple", None)
ContextManager = typing.ContextManager
AsyncContextManager = typing.AsyncContextManager
SupportsInt = typing.SupportsInt
SupportsFloat = typing.SupportsFloat
SupportsComplex = typing.SupportsComplex
SupportsBytes = typing.SupportsBytes
SupportsAbs = getattr(typing, "SupportsAbs", None)
SupportsRound = getattr(typing, "SupportsRound", None)
SupportsIndex = getattr(typing, "SupportsIndex", None)
Reversible = typing.Reversible
Sized = typing.Sized
Hashable = typing.Hashable
Container = typing.Container
AbstractSet = typing.AbstractSet
ByteString = typing.ByteString
overload = typing.overload
cast = typing.cast
NewType = typing.NewType
BinaryIO = typing.BinaryIO
TextIO = typing.TextIO
IO = typing.IO
Match = getattr(typing, "Match", None)
Pattern = getattr(typing, "Pattern", None)
