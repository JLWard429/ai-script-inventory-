[metadata]
name = ai-script-inventory
version = 1.0.0
author = AI Script Inventory Team
author_email = support@ai-script-inventory.example.com
description = An advanced AI script organization and management system
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/JLWard429/ai-script-inventory
project_urls =
    Bug Reports = https://github.com/JLWard429/ai-script-inventory/issues
    Source = https://github.com/JLWard429/ai-script-inventory
    Documentation = https://github.com/JLWard429/ai-script-inventory/tree/main/docs
    Security Policy = https://github.com/JLWard429/ai-script-inventory/security/policy
classifiers =
    Development Status :: 4 - Beta
    Intended Audience :: Developers
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3.12
    Topic :: Software Development :: Libraries :: Python Modules
    Topic :: Scientific/Engineering :: Artificial Intelligence
    Topic :: System :: Systems Administration
keywords = ai, automation, scripts, organization, workflow, security
license = MIT
license_files = LICENSE

[options]
zip_safe = False
include_package_data = True
python_requires = >=3.9
packages = find:
package_dir =
    = src
install_requires =
    spacy>=3.8.0,<4.0.0
    pyyaml>=6.0.0,<7.0.0
    pytest>=8.0.0
    tomli>=2.0.0; python_version<"3.11"
    toml>=0.10.0

[options.packages.find]
where = src

[options.extras_require]
dev =
    black>=24.0.0
    isort>=5.13.0
    flake8>=7.0.0
    mypy>=1.8.0
    pytest>=8.0.0
    pytest-cov>=5.0.0
    bandit>=1.8.0
    safety>=3.0.0
    pre-commit>=4.0.0
    pylint>=3.0.0
security =
    bandit>=1.8.0
    safety>=3.0.0
test =
    pytest>=8.0.0
    pytest-cov>=5.0.0

[options.entry_points]
console_scripts =
    ai-terminal = ai_script_inventory.superhuman_terminal:main
    superman = superman:main

[tool:pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
addopts = --verbose --tb=short
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests

[coverage:run]
source = .
omit =
    tests/*
    .github/*
    setup.py
    */migrations/*
    */venv/*
    */virtualenv/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError

[flake8]
max-line-length = 88
extend-ignore = E203, W503
exclude =
    .git,
    __pycache__,
    .pytest_cache,
    .coverage,
    *.egg-info,
    .tox,
    .venv,
    env,
    venv

[mypy]
python_version = 3.9
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
disallow_untyped_decorators = True

[bandit]
exclude_dirs = tests
skips = B101,B601

[isort]
profile = black
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
use_parentheses = True
ensure_newline_before_comments = True
line_length = 88